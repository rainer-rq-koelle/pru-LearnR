[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PRU LearnR - Pedestrian to Novice Series",
    "section": "",
    "text": "Preface\nThis quarto-book was developed with the help of many colleagues. It builds on the material presented and discussed during the LearnR sessions at EUROCONTROL.\nThis online book/resource is work-in-progress and represents a trial-run of the use of {webr} to allow for interactive content in online books.\nThis skeleton was setup for the recap on {ggplot2} and a follow-up session on recapping more {dplyr} and {ggplot2} stuff, and then venturing into {gt}. It is planned to add the material from the first sessions as we go (and time permits).\nWhile this might be disappointing for a first interaction. This could be the basis for transferring all our sessions into this format and support future “pedestrians” to get achieve the “novice” level … before embarking to become a “R/RStudio ecosystem ninja/jedi”!\nMay the forRce be with you!",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Test chapter",
    "section": "",
    "text": "When accessing the (book) page, you will see a WEBR STATUS loading symbol at the top of the page. This loads some of the required (underlying packages for this page). It may take a few seconds when you access this for the first time (and your browser has not yet cashed and downloaded the required package).\nBut it should be reasonable fast.\nConceptually, once you see the “green” Ready! label. All prep work is done and the ensuing code windows work.\nGive it a try … and run the code!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Test chapter</span>"
    ]
  },
  {
    "objectID": "dummy01-ggplot.html",
    "href": "dummy01-ggplot.html",
    "title": "2  Visualisation - Plotting in R",
    "section": "",
    "text": "2.1 Overview\nVisualisations form a key component of our deliverables.\nThere are several plotting “systems” in R. This session will focus on plotting with {ggplot2} after introducing some base-R graphic commands. The latter might come handy for a quick orientation or initial data exploration. However, {ggplot2} offers more flexibility and extensibility when we want to produce publication-ready plots.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualisation - Plotting in R</span>"
    ]
  },
  {
    "objectID": "dummy01-ggplot.html#base-r-plotting",
    "href": "dummy01-ggplot.html#base-r-plotting",
    "title": "2  Visualisation - Plotting in R",
    "section": "2.2 base-R plotting",
    "text": "2.2 base-R plotting\nBase-R uses the generic plot() function (and many objects have implemented a plot-function). So let’s explore associations in the built-in iris dataset.\nTo be frank, plot() works here as it is implemented as a method for a R-object (i.e. the iris dataset).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nMore generically, plot(x,y) accepts vectors. A simple scatter-plot of numerical values can then be called with the following commands.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nExercise\n\n\n\nThe mtcars dataset is a built-in dataset in BaseR. It provides information on a series of car models.\nMake a scatter plot with (horsepower) hp on the x axis and (weight of the car) wt on the y axis. Do not worry about axis labels, etc.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYour result should look like the plot below\n\n\n\n\n\n\n\n\nExpected Result\n\n\n\n\n\n\n# plot wt versus hp of the mtcars dataset in BaseR\n# the plot function uses vectors \n# Note 1: you recall how to access vectors with the $ notation, don't you?\n# Note 2: x = ... and y = ... is verbose. \n# Recall however, position matters in function calls.\n# Test this by swapping around x any y.\n\nplot(x = mtcars$wt, y = mtcars$hp)\n\n\n\n\n\n\n\n# you may also assign the vectors outside the plot() call, e.g.\nmy_x &lt;- mtcars$wt\nmy_y &lt;- mtcars$hp\nplot(x = my_x, y = my_y)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualisation - Plotting in R</span>"
    ]
  },
  {
    "objectID": "dummy01-ggplot.html#univariate-plots---get-a-feel-for-the-data",
    "href": "dummy01-ggplot.html#univariate-plots---get-a-feel-for-the-data",
    "title": "2  Visualisation - Plotting in R",
    "section": "2.3 Univariate plots - Get a feel for the data",
    "text": "2.3 Univariate plots - Get a feel for the data\n\n2.3.1 Base-R histogram\nIt is often useful to get a feel for the distribution of variables/data values. Here a histogram or boxplot are useful exploratory helpers.\nBefore constructing a publication ready (gg)plot (c.f. next section), the base-R variants may help.\nPlease recall: base-R plotting works with vectors!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n2.3.2 Base-R boxplot\n\n\n\n\n\n\nExercise\n\n\n\nAnother way of showing the distribution of values are so-called boxplots. The respective base-R call is boxplot(x).\nUsing the built-in mtcars dataset, create a boxplot of horsepower hp and then a boxplot for the variable weight wt.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYour result should look like the plot below\n\n\n\n\n\n\n\n\nExpected Result\n\n\n\n\n\n\n# boxplot of weight variable\nboxplot(x = mtcars$wt)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualisation - Plotting in R</span>"
    ]
  },
  {
    "objectID": "dummy01-ggplot.html#plotting-with-ggplot2",
    "href": "dummy01-ggplot.html#plotting-with-ggplot2",
    "title": "2  Visualisation - Plotting in R",
    "section": "2.4 Plotting with {ggplot2}",
    "text": "2.4 Plotting with {ggplot2}\n{ggplot2} is a popular plotting package of the {tidyverse}-family. The package implements the grammar of graphics which offers a conceptual framework to “construct” plots.\nThis allows for the generation of good plots quickly … that can then be iteratively “beautified” and made publication ready.\n\n\n\n\n\n\nThings to know/recall\n\n\n\nThe underlying framework (i.e. grammar of graphics) considers constructing a visualisation as a series of composeable elements.\nThis allows for the creation of “thousands of visualisation” instead of being restricted to a defined set of graphs in other software packages/apps.\n\n\nNote: As you will learn in the following {ggplot2} works extremely well with a tibble/dataframe in the long format (recall: tidy data).\n\n2.4.1 {ggplot2} Basics\n\nas usual, before working with a package, one has to load the package (and some data)\nplease recall: if your setup has not yet the library available, you can download it with the command install.packages(\"ggplot2\").\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nTo build a plot using {ggplot2} we start with the ggplot() function\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nggplot() creates a base ggplot object, think about a painter’s blank canvas. On this canvas we can then add layer by layer to establish our picture\nggplot() accepts a series of optional arguments for information to be shared across different components of the plot\nThe two main arguments we typically use here are\n\ndata - which is the name of the data frame we are working with, so mtcars\nmapping - which describes which columns of the data are used for different aspects of the plot\n\nWe create a mapping by using the aesthetic function aes() linking columns (~ vectors within our dataframe) to pieces of the plot\n\nWe typically start with telling ggplot() what values should be on the x and y axes\n\n\nLet’s plot the relationship betwen the horsepower hp of the mtcars dataset and the fuel consumption, mile-per-gallon mpg.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nThis doesn’t create a final figure. This time the blank canvas from above is augmented with some additional (aesthetic) information on default values for the data and mapped columns (e.g. a range of the x-axis is established that covers the data points in mpg, labels for the x- and y-axis are added)\nTo show (aka add) data to the plot, we add a so-called geometric layer (or geometry)\nggplot2 uses the + operator to add a new layer\nas a reasonable starting point for any bivariate (two variable) plot, we want to establish a scatter plot. The ggplot2 geometry for this is geom_point()\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nTo change things about the presentation of the layer we can pass additional arguments to the geom calls.\n\nFor example, we can set/change\n\nthe size argument of the points, let’s set it to 3\nthe color argument of the points, we’ll set it to \"blue\"\nthe transparency of the points, i.e. alpha value, let’s pick something semi-transparent between 0-100%, i.e. let’s set it to 0.5\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nExercise\n\n\n\nTry changing these values to make the graph look like you want it to. Explore how the graph changes when setting different values for size, color, or alpha.\nFor example * set size to 1.5 or color to “lightgreen”. * Remove one/some of these arguments (e.g. alpha).\nWhat happens, when you remove size = 1.5?\nP.S. Do not forget to hit Run Code after your changes ;)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n2.4.2 First improvements - towards production ready graphs\nWhile ggplot2 implements the grammar of graphics and speaks about aesthetics … the default color-settings, including the “characteristic” background are – at least – cringeworthy (in the humble opinion of the editor).\nAbove serves as a good basic plot. To use the graph in a report of presentation the following might help:\n\nmake the axis-labels “human-readable”, and possibly add a title\nchoose another background\n\nLabels serve as a documentation for your graph and can be added with the labs() function (layer). labs() accepts arguments for * title, subtitle, and caption * the axes, i.e. x and y. * you provide the desired string, e.g. \"Miles per Gallon\" to the argument\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n2.4.3 Grouping\n\nGroup on a single graph\nLook at influence of experimental treatment\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nTry changing the above code to color based on the gear\nWe can also split each group into different subplots (known as facets)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nTry changing this code to create a subplot for each value in vs with points of size 4\n\n\n\n\n\n\n\nExercise\n\n\n\nMake a scatter plot with hp on the x axis and wt on the y axis. Label the x axis “Horse Power” and the y axis “Weight”. Make one subplot for each value in gear.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nYour result should look like the plot below\n\n\n\n\n\n\n\n\nExpected Result\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution Code\n\n\n\n\n\n\nlibrary(ggplot2)\nggplot(mtcars, aes(x = hp, y = wt)) +\n  geom_point() +\n  labs(x = \"Horse Power\", y = \"Weight\") +\n  facet_wrap(~gear)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualisation - Plotting in R</span>"
    ]
  },
  {
    "objectID": "gt.html",
    "href": "gt.html",
    "title": "3  Publication-Ready Tables in R",
    "section": "",
    "text": "3.1 Overview\nwhy is this not working",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Publication-Ready Tables in R</span>"
    ]
  },
  {
    "objectID": "gt.html#overview",
    "href": "gt.html#overview",
    "title": "3  Publication-Ready Tables in R",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Publication-Ready Tables in R</span>"
    ]
  }
]